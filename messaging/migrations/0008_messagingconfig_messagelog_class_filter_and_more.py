# Generated by Django 5.2.5 on 2025-08-31 06:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        ('messaging', '0007_fresh_msg91'),
        ('students', '0001_initial'),
        ('teachers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MessagingConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sender_name', models.CharField(default='School', max_length=100)),
                ('sender_phone', models.CharField(default='', max_length=15)),
                ('whatsapp_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('twilio_account_sid', models.CharField(blank=True, max_length=100)),
                ('twilio_auth_token', models.CharField(blank=True, max_length=100)),
                ('twilio_phone_number', models.CharField(blank=True, max_length=20)),
                ('whatsapp_business_account_id', models.CharField(blank=True, max_length=100)),
                ('whatsapp_phone_number_id', models.CharField(blank=True, max_length=100)),
                ('whatsapp_access_token', models.CharField(blank=True, max_length=500)),
                ('messagecentral_customer_id', models.CharField(blank=True, max_length=100)),
                ('messagecentral_email', models.EmailField(blank=True, max_length=254)),
                ('messagecentral_password', models.CharField(blank=True, max_length=100)),
                ('messagecentral_sender_id', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='messagelog',
            name='class_filter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.academicclass'),
        ),
        migrations.AddField(
            model_name='messagelog',
            name='failed_sends',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='messagelog',
            name='message_type',
            field=models.CharField(choices=[('SMS', 'SMS'), ('WHATSAPP', 'WhatsApp')], default='SMS', max_length=10),
        ),
        migrations.AddField(
            model_name='messagelog',
            name='recipient_type',
            field=models.CharField(choices=[('INDIVIDUAL', 'Individual'), ('ALL_STUDENTS', 'All Students'), ('ALL_TEACHERS', 'All Teachers'), ('CLASS_STUDENTS', 'Class Students')], default='INDIVIDUAL', max_length=20),
        ),
        migrations.AddField(
            model_name='messagelog',
            name='successful_sends',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='messagelog',
            name='total_recipients',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='messagelog',
            name='recipient_name',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='messagelog',
            name='recipient_phone',
            field=models.CharField(blank=True, max_length=15),
        ),
        migrations.AlterField(
            model_name='messagelog',
            name='status',
            field=models.CharField(choices=[('SENT', 'Sent'), ('FAILED', 'Failed'), ('PENDING', 'Pending')], default='PENDING', max_length=10),
        ),
        migrations.CreateModel(
            name='MessageRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=100)),
                ('role', models.CharField(default='Student', max_length=20)),
                ('status', models.CharField(choices=[('SENT', 'Sent'), ('FAILED', 'Failed'), ('PENDING', 'Pending')], default='PENDING', max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('message_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='messaging.messagelog')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='teachers.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('message_type', models.CharField(choices=[('fee_reminder', 'Fee Reminder'), ('attendance', 'Attendance Alert'), ('general', 'General Notice'), ('exam', 'Exam Notification'), ('event', 'Event Announcement')], default='general', max_length=20)),
                ('template_content', models.TextField(help_text='Use variables like {{ student_name }}, {{ amount }}, etc.')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WhatsAppGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('group_type', models.CharField(choices=[('ALL_STUDENTS', 'All Students'), ('ALL_TEACHERS', 'All Teachers'), ('CLASS_STUDENTS', 'Class Students'), ('CUSTOM', 'Custom')], default='CUSTOM', max_length=20)),
                ('group_link', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('class_filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.academicclass')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('message_content', models.TextField()),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='messaging.whatsappgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
