# Generated by Django 5.2.5 on 2025-09-11 14:39

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MLSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_performance_model_enabled', models.BooleanField(default=True)),
                ('dropout_prediction_enabled', models.BooleanField(default=True)),
                ('payment_delay_prediction_enabled', models.BooleanField(default=True)),
                ('attendance_pattern_analysis_enabled', models.BooleanField(default=True)),
                ('high_risk_threshold', models.DecimalField(decimal_places=2, default=Decimal('0.70'), max_digits=3)),
                ('medium_risk_threshold', models.DecimalField(decimal_places=2, default=Decimal('0.50'), max_digits=3)),
                ('ml_batch_size', models.PositiveIntegerField(default=100)),
                ('ml_cache_duration', models.PositiveIntegerField(default=300)),
                ('real_time_predictions', models.BooleanField(default=False)),
                ('batch_processing_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ML Settings',
                'verbose_name_plural': 'ML Settings',
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_provider', models.CharField(choices=[('msg91', 'MSG91'), ('twilio', 'Twilio'), ('textlocal', 'TextLocal')], default='msg91', max_length=50)),
                ('sms_api_key', models.CharField(blank=True, max_length=200)),
                ('sms_sender_id', models.CharField(blank=True, max_length=20)),
                ('whatsapp_api_key', models.CharField(blank=True, max_length=200)),
                ('whatsapp_phone_number_id', models.CharField(blank=True, max_length=50)),
                ('email_enabled', models.BooleanField(default=False)),
                ('smtp_host', models.CharField(blank=True, max_length=100)),
                ('smtp_port', models.PositiveIntegerField(default=587)),
                ('smtp_username', models.CharField(blank=True, max_length=100)),
                ('smtp_password', models.CharField(blank=True, max_length=200)),
                ('fee_reminder_template', models.TextField(default='Dear Parent, Fee payment of ₹{amount} is due for {student_name}. Please pay by {due_date}.')),
                ('payment_confirmation_template', models.TextField(default='Payment of ₹{amount} received for {student_name}. Receipt: {receipt_no}')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Settings',
                'verbose_name_plural': 'Notification Settings',
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_size_mb', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('db_connections', models.PositiveIntegerField(default=0)),
                ('avg_response_time_ms', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('memory_usage_mb', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cpu_usage_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('ml_models_loaded', models.PositiveIntegerField(default=0)),
                ('ml_prediction_accuracy', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('critical', 'Critical')], default='healthy', max_length=20)),
                ('last_backup', models.DateTimeField(blank=True, null=True)),
                ('last_ml_training', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'System Health',
                'verbose_name_plural': 'System Health Records',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('changes', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='settings_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(default='2024-25', max_length=20)),
                ('session_start_date', models.DateField(blank=True, null=True)),
                ('session_end_date', models.DateField(blank=True, null=True)),
                ('late_fee_enabled', models.BooleanField(default=True)),
                ('late_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=5)),
                ('grace_period_days', models.PositiveIntegerField(default=7)),
                ('bulk_discount_enabled', models.BooleanField(default=True)),
                ('bulk_discount_threshold', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), max_digits=10)),
                ('bulk_discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('2.00'), max_digits=5)),
                ('attendance_required_percentage', models.DecimalField(decimal_places=2, default=Decimal('75.00'), max_digits=5)),
                ('attendance_warning_threshold', models.DecimalField(decimal_places=2, default=Decimal('70.00'), max_digits=5)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('whatsapp_enabled', models.BooleanField(default=False)),
                ('auto_fee_reminders', models.BooleanField(default=True)),
                ('reminder_days_before_due', models.PositiveIntegerField(default=3)),
                ('ml_predictions_enabled', models.BooleanField(default=True)),
                ('ml_cache_timeout', models.PositiveIntegerField(default=300)),
                ('performance_prediction_threshold', models.DecimalField(decimal_places=2, default=Decimal('0.70'), max_digits=3)),
                ('session_timeout_minutes', models.PositiveIntegerField(default=60)),
                ('max_login_attempts', models.PositiveIntegerField(default=5)),
                ('lockout_duration_minutes', models.PositiveIntegerField(default=15)),
                ('auto_backup_enabled', models.BooleanField(default=True)),
                ('backup_frequency_hours', models.PositiveIntegerField(default=24)),
                ('backup_retention_days', models.PositiveIntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='light', max_length=20)),
                ('language', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi')], default='en', max_length=10)),
                ('dashboard_layout', models.CharField(choices=[('compact', 'Compact'), ('detailed', 'Detailed'), ('cards', 'Cards')], default='detailed', max_length=20)),
                ('items_per_page', models.PositiveIntegerField(default=25, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)])),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('desktop_notifications', models.BooleanField(default=True)),
                ('module_settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preferences',
                'verbose_name_plural': 'User Preferences',
            },
        ),
    ]
